//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub email: String,
    pub password: String,
    pub firstname: String,
    pub lastname: Option<String>,
    pub created_at: Option<DateTimeUtc>,
    pub updated_at: Option<DateTimeUtc>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::coffees::Entity")]
    Coffees,
    #[sea_orm(has_many = "super::producer::Entity")]
    Producer,
}

impl Related<super::coffees::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Coffees.def()
    }
}

impl Related<super::producer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Producer.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
